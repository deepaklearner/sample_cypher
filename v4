Using REPORTS_TO

WITH ["L1managerid", "L2managerid", "L3managerid", "L4managerid"] AS levels
MATCH (n:User)
WHERE n.managerid IS NOT NULL
WITH n, levels
ORDER BY n.employeeNumber

// Collect the managers at different levels (L1, L2, L3, L4)
OPTIONAL MATCH (n)-[:REPORTS_TO*1..4]->(manager:User)
WITH n, manager, levels, length(collect(manager)) AS levelCount

// Create the report row with employee number, manager IDs, and level
RETURN n.employeeNumber AS employeeNumber, 
       n.managerid AS managerid, 
       levelCount + 1 AS Level,
       CASE WHEN levelCount >= 1 THEN collect(manager)[0].employeeNumber ELSE NULL END AS L1managerid,
       CASE WHEN levelCount >= 2 THEN collect(manager)[1].employeeNumber ELSE NULL END AS L2managerid,
       CASE WHEN levelCount >= 3 THEN collect(manager)[2].employeeNumber ELSE NULL END AS L3managerid,
       CASE WHEN levelCount >= 4 THEN collect(manager)[3].employeeNumber ELSE NULL END AS L4managerid
ORDER BY n.employeeNumber
